name: Test Build (Manual)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Тип сборки'
        required: true
        default: 'compose'
        type: choice
        options:
        - compose
        - conveyor
      version:
        description: 'Версия для сборки'
        required: false
        default: 'test-build'
        type: string

jobs:
  test-build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew :desktop:build
      env:
        VERSION: ${{ inputs.version }}

    - name: Install Conveyor (if needed)
      if: inputs.build_type == 'conveyor'
      run: |
        curl -L https://keys.openpgp.org/download/keys/3C2C43D7267D5959FE7DA2D7B6BC98744E6E0F94 | gpg --dearmor > /usr/local/share/keyrings/hydraulic-archive-keyring.gpg
        echo "deb [signed-by=/usr/local/share/keyrings/hydraulic-archive-keyring.gpg] https://downloads.hydraulic.software/deb/ stable main" > /etc/apt/sources.list.d/hydraulic.list
        apt-get update
        apt-get install -y conveyor

    - name: Build with Conveyor
      if: inputs.build_type == 'conveyor'
      run: |
        cd desktop
        conveyor make --output-dir ../build/packages site
      env:
        VERSION: ${{ inputs.version }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build with Compose Desktop
      if: inputs.build_type == 'compose'
      run: |
        cd desktop
        ./gradlew :desktop:packageDmg
      env:
        VERSION: ${{ inputs.version }}

    - name: List all files in build directory
      run: |
        echo "=== Build directory contents ==="
        find . -name "build" -type d -exec find {} -type f \; | head -20

    - name: Find .dmg files
      run: |
        echo "=== Searching for .dmg files ==="
        find . -name "*.dmg" -type f -exec ls -la {} \;

    - name: Upload .dmg artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-build-${{ inputs.build_type }}-${{ inputs.version }}
        path: |
          build/packages/*.dmg
          desktop/build/compose/binaries/main/dmg/*.dmg
          desktop/build/compose/binaries/main/app/*.dmg
        retention-days: 7
