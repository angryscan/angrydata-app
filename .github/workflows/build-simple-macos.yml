name: Build macOS .dmg (Simple)

on:
  push:
    branches: [ main, develop, feature/* ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew :desktop:build
      env:
        VERSION: ${{ github.ref_name }}

    - name: Create .dmg with Compose Desktop
      run: |
        cd desktop
        ./gradlew :desktop:packageDmg
      env:
        VERSION: ${{ github.ref_name }}

    - name: Find .dmg files
      run: |
        find . -name "*.dmg" -type f

    - name: Upload .dmg artifact
      uses: actions/upload-artifact@v4
      with:
        name: big-data-scanner-macos-${{ github.ref_name }}
        path: |
          desktop/build/compose/binaries/main/dmg/*.dmg
          desktop/build/compose/binaries/main/app/*.dmg
        retention-days: 30

    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          desktop/build/compose/binaries/main/dmg/*.dmg
          desktop/build/compose/binaries/main/app/*.dmg
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
